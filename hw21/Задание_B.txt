1. Что такое инкапсуляция, приведите инструменты для ее реализации. 
Способ структурирования кода, при котором к его частам(методам, аттрибутам) не будет прямого доступа. Для ограничения доступа используются модификаторы доступа. Public, protected, private, default. Каждый из них имеет свой "уровень защиты".
Но, допустим, есть аттрибут который имеет модификатор private. К нему мы будем обращаться с помощью геттеров и/или сеттеров. Таким образом у нас не будет прямого доступа к переменной, но мы все же ссможем использовать значения из этой переменной.

Способ реализации кода. Монжо закрыть доступ к некоторым его частям с помощью модификаторов доступа. Сможем считывать данным с переменной/класса, но
не сможем изменять в них ничего.

2. Что такое наследование, приведите 2 примера наследования.
При наследованиее - все наследуемы классы приобретают аттрибуты от родительского класса
Класс родитель - машина. - Наследователи - грузовая машина, легковая, гоночная и тд.
Класс родитель - Мяч. Наследуемые - баскетбольный, футбольный волейбольный мяч.


3. Что такое static?
Модификатор для аттрибутов. Позваляет делать значения для этих методов/классов одинаковыми для всех объектов класса.

4. Для чего мы используем static?
Статик методы можно использовать без инициализации объекта, обращаясь напрямую к классу. 
Повзоляет, например, вывести информацию о всех экземплярах класса.

5. Можем ли мы унаследовать статичный метод?
Да, но нельзя будет использовать Override.

6. Как получить значение статичной переменной?
Обратиться напрямую или же через геттер(Class.getStatic()), если переменная имеет модификатор private

7. Как запретить изменение, но разрешить считывание статичной переменной?
Сделать переменную private и брать значения через геттеры.